# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Test and build

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install poetry
      run: |
        python -m pip install poetry==1.3.1
    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project false
        python -m poetry config cache-dir .poetry-cache
    - name: Cache for poetry 
      uses: actions/cache@v4.0.2
      with:
        path: .poetry-cache
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        python -m poetry install
    - name: Lint with flake8
      run: |
        python -m poetry run flake8 mismiy tests --count --show-source --statistics --exit-zero
    - name: Run tests
      run: |
        python -m poetry run python -munittest --buffer --locals 
    - name: Generate site
      run: |
        poetry run mismiy -o _site posts pages
    - name: Upload pages artifact
      uses: actions/upload-pages-artifact@v3.0.1

  pages:
    needs:
      - build
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
